/*
Deployment script for RTesting

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "RTesting"
:setvar DefaultFilePrefix "RTesting"
:setvar DefaultDataPath "C:\SQL\Data\"
:setvar DefaultLogPath "C:\SQL\Logs\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [Activity].[DF_ActivityLog_ActivityUser]...';


GO
ALTER TABLE [Activity].[ActivityLog] DROP CONSTRAINT [DF_ActivityLog_ActivityUser];


GO
PRINT N'Dropping [Maintenance].[DF_Reference_MediaType_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_MediaType] DROP CONSTRAINT [DF_Reference_MediaType_MaintenanceUser];


GO
PRINT N'Dropping [Maintenance].[DF_Reference_Network_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_Network] DROP CONSTRAINT [DF_Reference_Network_MaintenanceUser];


GO
PRINT N'Dropping [Maintenance].[DF_Reference_StatusCode_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_StatusCode] DROP CONSTRAINT [DF_Reference_StatusCode_MaintenanceUser];


GO
PRINT N'Dropping [Reference].[DF_MediaType_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[MediaType] DROP CONSTRAINT [DF_MediaType_LastMaintenanceUser];


GO
PRINT N'Dropping [Reference].[DF_Network_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[Network] DROP CONSTRAINT [DF_Network_LastMaintenanceUser];


GO
PRINT N'Dropping [Reference].[DF_StatusCode_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[StatusCode] DROP CONSTRAINT [DF_StatusCode_LastMaintenanceUser];


GO
PRINT N'Creating [Media]...';


GO
CREATE SCHEMA [Media]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Media].[MediaAttribute]...';


GO
CREATE TABLE [Media].[MediaAttribute] (
    [MediaAttributeId]        BIGINT           IDENTITY (1, 1) NOT NULL,
    [MediaUid]                UNIQUEIDENTIFIER NOT NULL,
    [MediaAttributeTypeId]    SMALLINT         NOT NULL,
    [MediaAttributeValue]     NVARCHAR (MAX)   NOT NULL,
    [LastMaintenanceDateTime] DATETIME         NOT NULL,
    [LastMaintenanceUser]     NVARCHAR (50)    NOT NULL,
    CONSTRAINT [PK_MediaAttribute] PRIMARY KEY CLUSTERED ([MediaAttributeId] ASC)
);


GO
PRINT N'Creating [Media].[Playlist]...';


GO
CREATE TABLE [Media].[Playlist] (
    [PlaylistId]              SMALLINT      IDENTITY (1, 1) NOT NULL,
    [PlaylistName]            NVARCHAR (50) NOT NULL,
    [LastMaintenanceDateTime] DATETIME      NOT NULL,
    [LastMaintenanceUser]     NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Playlist] PRIMARY KEY CLUSTERED ([PlaylistId] ASC)
);


GO
PRINT N'Creating [Media].[PlaylistMedia]...';


GO
CREATE TABLE [Media].[PlaylistMedia] (
    [PlaylistMediaId]         BIGINT           IDENTITY (1, 1) NOT NULL,
    [PlaylistId]              SMALLINT         NOT NULL,
    [MediaUid]                UNIQUEIDENTIFIER NOT NULL,
    [PlaylistSequence]        SMALLINT         NOT NULL,
    [LastMaintenanceDateTime] DATETIME         NOT NULL,
    [LastMaintenanceUser]     NVARCHAR (50)    NOT NULL,
    CONSTRAINT [PK_PlaylistMedia] PRIMARY KEY CLUSTERED ([PlaylistMediaId] ASC)
);


GO
PRINT N'Creating [Media].[Media]...';


GO
CREATE TABLE [Media].[Media] (
    [MediaUid]                UNIQUEIDENTIFIER NOT NULL,
    [MediaName]               NVARCHAR (100)   NOT NULL,
    [MediaTypeId]             TINYINT          NOT NULL,
    [NetworkId]               SMALLINT         NOT NULL,
    [AddDateTime]             DATETIME2 (7)    NOT NULL,
    [LastMaintenanceDateTime] DATETIME         NOT NULL,
    [LastMaintenanceUser]     NVARCHAR (50)    NOT NULL,
    CONSTRAINT [PK_Media] PRIMARY KEY NONCLUSTERED ([MediaUid] ASC)
);


GO
PRINT N'Creating [Media].[Media].[IX_Media_AddDateTime]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_Media_AddDateTime]
    ON [Media].[Media]([AddDateTime] ASC, [MediaUid] ASC);


GO
PRINT N'Creating [Media].[Recording]...';


GO
CREATE TABLE [Media].[Recording] (
    [RecordingId]             SMALLINT         IDENTITY (1, 1) NOT NULL,
    [RecordingDateTime]       DATETIME         NOT NULL,
    [MediaUid]                UNIQUEIDENTIFIER NOT NULL,
    [StatusCodeId]            TINYINT          NOT NULL,
    [LastMaintenanceDateTime] DATETIME         NOT NULL,
    [LastMaintenanceUser]     NVARCHAR (50)    NOT NULL,
    CONSTRAINT [PK_Recording] PRIMARY KEY CLUSTERED ([RecordingId] ASC)
);


GO
PRINT N'Creating [Media].[RecordingPart]...';


GO
CREATE TABLE [Media].[RecordingPart] (
    [RecordingPartId]         INT           IDENTITY (1, 1) NOT NULL,
    [RecordingId]             SMALLINT      NOT NULL,
    [RecordingSequence]       TINYINT       NOT NULL,
    [StartTime]               TIME (7)      NULL,
    [EndTime]                 TIME (7)      NULL,
    [LastMaintenanceDateTime] DATETIME      NOT NULL,
    [LastMaintenanceUser]     NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_RecordingPart] PRIMARY KEY CLUSTERED ([RecordingPartId] ASC)
);


GO
PRINT N'Creating [Reference].[MediaAttributeType]...';


GO
CREATE TABLE [Reference].[MediaAttributeType] (
    [MediaAttributeTypeId]      SMALLINT       IDENTITY (1, 1) NOT NULL,
    [MediaAttributeType]        NVARCHAR (20)  NOT NULL,
    [MediaAttributeDescription] NVARCHAR (100) NULL,
    [MediaAttributeRepeatable]  BIT            NOT NULL,
    [LastMaintenanceDateTime]   DATETIME       NOT NULL,
    [LastMaintenanceUser]       NVARCHAR (50)  NOT NULL,
    CONSTRAINT [PK_MediaAttributeType] PRIMARY KEY CLUSTERED ([MediaAttributeTypeId] ASC)
);


GO
PRINT N'Creating [Activity].[DF_ActivityLog_ActivityUser]...';


GO
ALTER TABLE [Activity].[ActivityLog]
    ADD CONSTRAINT [DF_ActivityLog_ActivityUser] DEFAULT (system_user) FOR [ActivityUser];


GO
PRINT N'Creating [Maintenance].[DF_Reference_MediaType_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_MediaType]
    ADD CONSTRAINT [DF_Reference_MediaType_MaintenanceUser] DEFAULT (system_user) FOR [MaintenanceUser];


GO
PRINT N'Creating [Maintenance].[DF_Reference_Network_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_Network]
    ADD CONSTRAINT [DF_Reference_Network_MaintenanceUser] DEFAULT (system_user) FOR [MaintenanceUser];


GO
PRINT N'Creating [Maintenance].[DF_Reference_StatusCode_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_StatusCode]
    ADD CONSTRAINT [DF_Reference_StatusCode_MaintenanceUser] DEFAULT (system_user) FOR [MaintenanceUser];


GO
PRINT N'Creating [Reference].[DF_MediaType_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[MediaType]
    ADD CONSTRAINT [DF_MediaType_LastMaintenanceUser] DEFAULT (system_user) FOR [LastMaintenanceUser];


GO
PRINT N'Creating [Reference].[DF_Network_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[Network]
    ADD CONSTRAINT [DF_Network_LastMaintenanceUser] DEFAULT (system_user) FOR [LastMaintenanceUser];


GO
PRINT N'Creating [Reference].[DF_StatusCode_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[StatusCode]
    ADD CONSTRAINT [DF_StatusCode_LastMaintenanceUser] DEFAULT (system_user) FOR [LastMaintenanceUser];


GO
PRINT N'Creating [Media].[DF_Media_MediaUid]...';


GO
ALTER TABLE [Media].[Media]
    ADD CONSTRAINT [DF_Media_MediaUid] DEFAULT (newid()) FOR [MediaUid];


GO
PRINT N'Creating [Media].[DF_Media_LastMaintenanceUser]...';


GO
ALTER TABLE [Media].[Media]
    ADD CONSTRAINT [DF_Media_LastMaintenanceUser] DEFAULT (system_user) FOR [LastMaintenanceUser];


GO
PRINT N'Creating [Media].[DF_Media_LastMaintenanceDateTime]...';


GO
ALTER TABLE [Media].[Media]
    ADD CONSTRAINT [DF_Media_LastMaintenanceDateTime] DEFAULT (getdate()) FOR [LastMaintenanceDateTime];


GO
PRINT N'Creating [Media].[DF_Media_AddDateTime]...';


GO
ALTER TABLE [Media].[Media]
    ADD CONSTRAINT [DF_Media_AddDateTime] DEFAULT (getdate()) FOR [AddDateTime];


GO
PRINT N'Creating [Media].[FK_MediaAttribute_Media]...';


GO
ALTER TABLE [Media].[MediaAttribute] WITH NOCHECK
    ADD CONSTRAINT [FK_MediaAttribute_Media] FOREIGN KEY ([MediaUid]) REFERENCES [Media].[Media] ([MediaUid]);


GO
PRINT N'Creating [Media].[FK_MediaAttribute_MediaAttributeType]...';


GO
ALTER TABLE [Media].[MediaAttribute] WITH NOCHECK
    ADD CONSTRAINT [FK_MediaAttribute_MediaAttributeType] FOREIGN KEY ([MediaAttributeTypeId]) REFERENCES [Reference].[MediaAttributeType] ([MediaAttributeTypeId]);


GO
PRINT N'Creating [Media].[FK_PlaylistMedia_Playlist]...';


GO
ALTER TABLE [Media].[PlaylistMedia] WITH NOCHECK
    ADD CONSTRAINT [FK_PlaylistMedia_Playlist] FOREIGN KEY ([PlaylistId]) REFERENCES [Media].[Playlist] ([PlaylistId]);


GO
PRINT N'Creating [Media].[FK_PlaylistMedia_Media]...';


GO
ALTER TABLE [Media].[PlaylistMedia] WITH NOCHECK
    ADD CONSTRAINT [FK_PlaylistMedia_Media] FOREIGN KEY ([MediaUid]) REFERENCES [Media].[Media] ([MediaUid]);


GO
PRINT N'Creating [Media].[FK_Media_MediaType]...';


GO
ALTER TABLE [Media].[Media] WITH NOCHECK
    ADD CONSTRAINT [FK_Media_MediaType] FOREIGN KEY ([MediaTypeId]) REFERENCES [Reference].[MediaType] ([MediaTypeId]);


GO
PRINT N'Creating [Media].[FK_Media_Network]...';


GO
ALTER TABLE [Media].[Media] WITH NOCHECK
    ADD CONSTRAINT [FK_Media_Network] FOREIGN KEY ([NetworkId]) REFERENCES [Reference].[Network] ([NetworkId]);


GO
PRINT N'Creating [Media].[FK_Recording_Media]...';


GO
ALTER TABLE [Media].[Recording] WITH NOCHECK
    ADD CONSTRAINT [FK_Recording_Media] FOREIGN KEY ([MediaUid]) REFERENCES [Media].[Media] ([MediaUid]);


GO
PRINT N'Creating [Media].[FK_Recording_StatusCode]...';


GO
ALTER TABLE [Media].[Recording] WITH NOCHECK
    ADD CONSTRAINT [FK_Recording_StatusCode] FOREIGN KEY ([StatusCodeId]) REFERENCES [Reference].[StatusCode] ([StatusCodeId]);


GO
PRINT N'Creating [Media].[FK_RecordingPart_Recording]...';


GO
ALTER TABLE [Media].[RecordingPart] WITH NOCHECK
    ADD CONSTRAINT [FK_RecordingPart_Recording] FOREIGN KEY ([RecordingId]) REFERENCES [Media].[Recording] ([RecordingId]);


GO
PRINT N'Creating [Media].[PlaylistMediaGetNextPlaylistSequence]...';


GO
create function Media.PlaylistMediaGetNextPlaylistSequence (@playlistId smallint, @mediaUid uniqueidentifier)
	returns smallint
as
begin
	declare @playlistSequence smallint

	set @playlistSequence = (
		select max(PlaylistSequence) 
		from Media.PlaylistMedia
		where
			PlaylistId = @playlistId
			and MediaUid = @mediaUid) + 1

	return @playlistSequence
end
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [Media].[MediaAttribute] WITH CHECK CHECK CONSTRAINT [FK_MediaAttribute_Media];

ALTER TABLE [Media].[MediaAttribute] WITH CHECK CHECK CONSTRAINT [FK_MediaAttribute_MediaAttributeType];

ALTER TABLE [Media].[PlaylistMedia] WITH CHECK CHECK CONSTRAINT [FK_PlaylistMedia_Playlist];

ALTER TABLE [Media].[PlaylistMedia] WITH CHECK CHECK CONSTRAINT [FK_PlaylistMedia_Media];

ALTER TABLE [Media].[Media] WITH CHECK CHECK CONSTRAINT [FK_Media_MediaType];

ALTER TABLE [Media].[Media] WITH CHECK CHECK CONSTRAINT [FK_Media_Network];

ALTER TABLE [Media].[Recording] WITH CHECK CHECK CONSTRAINT [FK_Recording_Media];

ALTER TABLE [Media].[Recording] WITH CHECK CHECK CONSTRAINT [FK_Recording_StatusCode];

ALTER TABLE [Media].[RecordingPart] WITH CHECK CHECK CONSTRAINT [FK_RecordingPart_Recording];


GO
PRINT N'Update complete.';


GO
