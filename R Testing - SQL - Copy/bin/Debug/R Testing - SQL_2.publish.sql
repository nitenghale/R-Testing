/*
Deployment script for RTesting

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "RTesting"
:setvar DefaultFilePrefix "RTesting"
:setvar DefaultDataPath "C:\SQL\Data\"
:setvar DefaultLogPath "C:\SQL\Logs\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 41219328-07e4-4f6a-9414-2aed5ee2137b is skipped, element [Reference].[MediaType].[LastMaintenaceDateTime] (SqlSimpleColumn) will not be renamed to LastMaintenanceDateTime';


GO
PRINT N'Dropping [Activity].[DF_ActivityLog_ActivityUser]...';


GO
ALTER TABLE [Activity].[ActivityLog] DROP CONSTRAINT [DF_ActivityLog_ActivityUser];


GO
PRINT N'Dropping [Maintenance].[DF_Reference_MediaType_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_MediaType] DROP CONSTRAINT [DF_Reference_MediaType_MaintenanceUser];


GO
PRINT N'Dropping [Maintenance].[DF_Reference_Network_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_Network] DROP CONSTRAINT [DF_Reference_Network_MaintenanceUser];


GO
PRINT N'Dropping [Maintenance].[DF_Reference_StatusCode_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_StatusCode] DROP CONSTRAINT [DF_Reference_StatusCode_MaintenanceUser];


GO
PRINT N'Dropping [Reference].[DF_MediaType_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[MediaType] DROP CONSTRAINT [DF_MediaType_LastMaintenanceUser];


GO
PRINT N'Dropping [Reference].[DF_Network_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[Network] DROP CONSTRAINT [DF_Network_LastMaintenanceUser];


GO
PRINT N'Dropping [Reference].[DF_StatusCode_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[StatusCode] DROP CONSTRAINT [DF_StatusCode_LastMaintenanceUser];


GO
PRINT N'Creating [Activity].[DF_ActivityLog_ActivityUser]...';


GO
ALTER TABLE [Activity].[ActivityLog]
    ADD CONSTRAINT [DF_ActivityLog_ActivityUser] DEFAULT (system_user) FOR [ActivityUser];


GO
PRINT N'Creating [Maintenance].[DF_Reference_MediaType_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_MediaType]
    ADD CONSTRAINT [DF_Reference_MediaType_MaintenanceUser] DEFAULT (system_user) FOR [MaintenanceUser];


GO
PRINT N'Creating [Maintenance].[DF_Reference_Network_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_Network]
    ADD CONSTRAINT [DF_Reference_Network_MaintenanceUser] DEFAULT (system_user) FOR [MaintenanceUser];


GO
PRINT N'Creating [Maintenance].[DF_Reference_StatusCode_MaintenanceUser]...';


GO
ALTER TABLE [Maintenance].[Reference_StatusCode]
    ADD CONSTRAINT [DF_Reference_StatusCode_MaintenanceUser] DEFAULT (system_user) FOR [MaintenanceUser];


GO
PRINT N'Creating [Reference].[DF_MediaType_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[MediaType]
    ADD CONSTRAINT [DF_MediaType_LastMaintenanceUser] DEFAULT (system_user) FOR [LastMaintenanceUser];


GO
PRINT N'Creating [Reference].[DF_Network_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[Network]
    ADD CONSTRAINT [DF_Network_LastMaintenanceUser] DEFAULT (system_user) FOR [LastMaintenanceUser];


GO
PRINT N'Creating [Reference].[DF_StatusCode_LastMaintenanceUser]...';


GO
ALTER TABLE [Reference].[StatusCode]
    ADD CONSTRAINT [DF_StatusCode_LastMaintenanceUser] DEFAULT (system_user) FOR [LastMaintenanceUser];


GO
PRINT N'Creating [Reference].[MediaTypeIdFromType]...';


GO
create function Reference.MediaTypeIdFromType (@mediaType nvarchar(20))
	returns tinyint
as
begin
	declare @mediaTypeId tinyint

	set @mediaTypeId = (select MediaTypeId from Reference.MediaType where MediaType = @mediaType)

	return @mediaTypeId
end
GO
PRINT N'Creating [Reference].[NetworkIdFromName]...';


GO
create function Reference.NetworkIdFromName (@networkName nvarchar(50))
	returns smallint
as
begin
	declare @networkId smallint

	set @networkId = (select NetworkId from Reference.Network where NetworkName = @networkName)

	return @networkId
end
GO
PRINT N'Creating [Reference].[StatusCodeIdFromCode]...';


GO
create function Reference.StatusCodeIdFromCode (@statusCode nvarchar(20))
	returns tinyint
as
begin
	declare @statusCodeId tinyint

	set @statusCodeId = (select StatusCodeId from Reference.StatusCode where StatusCode = @statusCode)

	return @statusCodeId
end
GO
PRINT N'Creating [Activity].[ActivityLogAdd]...';


GO
create procedure Activity.ActivityLogAdd
	@objectName varchar(150)
	,@objectParameters nvarchar(max)
as
begin
	set nocount on

	insert into Activity.ActivityLog
	(
		ObjectName
		,ObjectParameters
	)
	values
	(
		@objectName
		,@objectParameters
	)
end
GO
PRINT N'Creating [Reference].[MediaTypeAdd]...';


GO
create procedure Reference.MediaTypeAdd
	@mediaType nvarchar(20)
	,@mediaTypeDescription nvarchar(100) = null
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@mediaType = ||' + isnull(@mediaType, 'NULL') + '||' +
		', @mediaTypeDescription = ||' + isnull(@mediaTypeDescription, 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	insert into Reference.MediaType
	(
		MediaType
		,MediaTypeDescription
	)
	values
	(
		@mediaType
		,@mediaTypeDescription
	)
end
GO
PRINT N'Creating [Reference].[MediaTypeBrowse]...';


GO
create procedure Reference.MediaTypeBrowse
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = null

	select
		MediaTypeId
		,MediaType
		,MediaTypeDescription
		,LastMaintenanceDateTime
		,LastMaintenanceUser
	from Reference.MediaType
	order by MediaType
end
GO
PRINT N'Creating [Reference].[MediaTypeDelete]...';


GO
create procedure Reference.MediaTypeDelete
	@mediaTypeId tinyint
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@mediaTypeId = ||' + isnull(cast(@mediaTypeId as varchar(4)), 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	delete from Reference.MediaType
	where MediaTypeId = @mediaTypeId
end
GO
PRINT N'Creating [Reference].[MediaTypeDetails]...';


GO
create procedure Reference.MediaTypeDetails
	@mediaTypeId tinyint = null
	,@mediaType nvarchar(20) = null
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@mediaTypeId = ||' + isnull(cast(@mediaTypeId as varchar(4)), 'NULL') + '||' +
		'@mediaType = ||' + isnull(@mediaType, 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	if @mediaTypeId is null
		set @mediaType = Reference.MediaTypeIdFromType(@mediaType)

	select
		MediaTypeId
		,MediaType
		,MediaTypeDescription
		,LastMaintenanceDateTime
		,LastMaintenanceUser
	from Reference.MediaType
	where MediaTypeId = @mediaTypeId
end
GO
PRINT N'Creating [Reference].[MediaTypeUpdate]...';


GO
create procedure Reference.MediaTypeUpdate
	@mediaTypeId tinyint
	,@mediaType nvarchar(20)
	,@mediaTypeDescription nvarchar(100) = null
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@mediaTypeId = ||' + isnull(cast(@mediaTypeId as varchar(4)), 'NULL') + '||' +
		', @mediaType = ||' + isnull(@mediaType, 'NULL') + '||' +
		', @mediaTypeDescription = ||' + isnull(@mediaTypeDescription, 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	update Reference.MediaType
	set
		MediaType = @mediaType
		,MediaTypeDescription = @mediaTypeDescription
		,LastMaintenanceDateTime = getdate()
		,LastMaintenanceUser = system_user
	where MediaTypeId = @mediaTypeId
end
GO
PRINT N'Creating [Reference].[NetworkAdd]...';


GO
create procedure Reference.NetworkAdd
	@networkAbbreviation nvarchar(10) = null
	,@networkName nvarchar(50)
	,@channelNumber decimal(7, 2) = null
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@networkAbbreviation = ||' + isnull(@networkAbbreviation, 'NULL') + '||' +
		', @networkName = ||' + isnull(@networkName, 'NULL') + '||' +
		', @channelNumber = ||' + isnull(cast(@channelNumber as varchar(8)), 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	insert into Reference.Network
	(
		NetworkAbbreviation
		,NetworkName
		,ChannelNumber
	)
	values
	(
		@networkAbbreviation
		,@networkName
		,@channelNumber
	)
end
GO
PRINT N'Creating [Reference].[NetworkBrowse]...';


GO
create procedure Reference.NetworkBrowse
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = null


	select
		NetworkId
		,isnull(NetworkAbbreviation, '') as NetworkAbbreviation
		,NetworkName
		,isnull(ChannelNumber, '') as ChannelNumber
		,LastMaintenanceDateTime
		,LastMaintenanceUser
	from Reference.Network
	order by Network.NetworkName
end
GO
PRINT N'Creating [Reference].[NetworkDelete]...';


GO
create procedure Reference.NetworkDelete
	@networkId smallint
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@networkId = ||' + isnull(cast(@networkId as varchar(5)), 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	delete from Reference.Network where NetworkId = @networkId
end
GO
PRINT N'Creating [Reference].[NetworkDetails]...';


GO
create procedure Reference.NetworkDetails
	@networkId smallint = null
	,@networkAbbreviation nvarchar(10) = null
	,@networkName nvarchar(50) = null
	,@channelNumber decimal(7, 2) = null
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@networkId = ||' + isnull(cast(@networkId as varchar(5)), 'NULL') + '||' +
		', @networkAbbreviation = ||' + isnull(@networkAbbreviation, 'NULL') + '||' +
		', @networkName = ||' + isnull(@networkName, 'NULL') + '||' +
		', @channelNumber = ||' + isnull(cast(@channelNumber as varchar(8)), 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	if @networkId is null
		set @networkId = Reference.NetworkIdFromName

	select
		NetworkId
		,NetworkAbbreviation
		,NetworkName
		,ChannelNumber
		,LastMaintenanceDateTime
		,LastMaintenanceUser
	from Reference.Network
	where NetworkId = @networkId
end
GO
PRINT N'Creating [Reference].[NetworkList]...';


GO
create procedure Reference.NetworkList
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = null

	select NetworkName
	from Reference.Network
	order by NetworkName
end
GO
PRINT N'Creating [Reference].[NetworkUpdate]...';


GO
create procedure Reference.NetworkUpdate
	@networkId smallint
	,@networkAbbreviation nvarchar(10) = null
	,@networkName nvarchar(50)
	,@channelNumber decimal(7, 2) = null
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@networkId = ||' + isnull(cast(@networkId as varchar(5)), 'NULL') + '||' +
		', @networkAbbreviation = ||' + isnull(@networkAbbreviation, 'NULL') + '||' +
		', @networkName = ||' + isnull(@networkName, 'NULL') + '||' +
		', @channelNumber = ||' + isnull(cast(@channelNumber as varchar(8)), 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	update Reference.Network
	set
		NetworkAbbreviation = @networkAbbreviation
		,NetworkName = @networkName
		,ChannelNumber = @channelNumber
		,LastMaintenanceDateTime = getdate()
		,LastMaintenanceUser = system_user
	where NetworkId = @networkId
end
GO
PRINT N'Creating [Reference].[StatusCodeAdd]...';


GO
create procedure Reference.StatusCodeAdd
	@statusCode nvarchar(20)
	,@statusDescription nvarchar(100) = null
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@statusCode = ||' + isnull(@statusCode, 'NULL') + '||' +
		', @statusDescription = ||' + isnull(@statusDescription, 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	insert into Reference.StatusCode
	(
		StatusCode
		,StatusDescription
	)
	values
	(
		@statusCode
		,@statusDescription
	)
end
GO
PRINT N'Creating [Reference].[StatusCodeBrowse]...';


GO
create procedure Reference.StatusCodeBrowse
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = null

	select
		StatusCodeId
		,StatusCode
		,StatusDescription
		,LastMaintenanceDateTime
		,LastMaintenanceUser
	from Reference.StatusCode
	order by StatusCode
end
GO
PRINT N'Creating [Reference].[StatusCodeDelete]...';


GO
create procedure Reference.StatusCodeDelete
	@statusCodeId tinyint
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@statusCodeId = ||' + isnull(cast(@statusCodeId as varchar(4)), 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	delete from Reference.StatusCode
	where StatusCodeId = @statusCodeId
end
GO
PRINT N'Creating [Reference].[StatusCodeDetails]...';


GO
create procedure Reference.StatusCodeDetails
	@statusCodeId tinyint = null
	,@statusCode nvarchar(20) = null
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@statusCodeId = ||' + isnull(cast(@statusCodeId as varchar(4)), 'NULL') + '||' +
		', @statusCode = ||' + isnull(@statusCode, 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	if @statusCodeId is null
		set @statusCodeId = Reference.StatusCodeIdFromCode(@statusCode)

	select
		StatusCodeId
		,StatusCode
		,StatusDescription
		,LastMaintenanceDateTime
		,LastMaintenanceUser
	from Reference.StatusCode
	where StatusCodeId = @statusCodeId
end
GO
PRINT N'Creating [Reference].[StatusCodeUpdate]...';


GO
create procedure Reference.StatusCodeUpdate
	@statusCodeId tinyint
	,@statusCode nvarchar(20)
	,@statusDescription nvarchar(100) = null
as
begin
	set nocount on

	declare @objectName varchar(150) = object_schema_name(@@procid) + '.' + object_name(@@procid)
	declare @objectParameters nvarchar(max) = 
		'@statusCodeId = ||' + isnull(cast(@statusCodeId as varchar(4)), 'NULL') + '||' +
		', @statusCode = ||' + isnull(@statusCode, 'NULL') + '||' +
		', @statusDescription = ||' + isnull(@statusDescription, 'NULL') + '||'
	exec Activity.ActivityLogAdd @objectName = @objectName, @objectParameters = @objectParameters

	update Reference.StatusCode
	set
		StatusCode = @statusCode
		,StatusDescription = @statusDescription
		,LastMaintenanceDateTime = getdate()
		,LastMaintenanceUser = system_user
	where StatusCodeId = @statusCodeId
end
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '41219328-07e4-4f6a-9414-2aed5ee2137b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('41219328-07e4-4f6a-9414-2aed5ee2137b')

GO

GO
PRINT N'Update complete.';


GO
