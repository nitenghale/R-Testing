runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
## try connecting to database; if the connection fails, return a
## DT::datatable with the error message
con <- tryCatch(GetDatabaseConnection(),
error = function(err) { return(err) })
## above is what assigns the error to con, in message
if (typeof(con) == "list")
## function accepts a character string and returns a DT::datatable
return(p(paste("Error connecting to database:", con$message)))
query <- "exec Reference.ListNetworks"
## try executing command in query, with connection in con
## if the query fails, return a DT::datatable with the error message
rs <- tryCatch(dbSendQuery(con, query),
error = function(err) { return(err) })
## above is what assigns the error to rs, in message
if (typeof(rs) == "list")
{
dbDisconnect(con)
## function accepts a character string and returns a DT::datatable
return(p(paste("Error executing command:", rs$message)))
}
dfData <- dbFetch(rs)
dbClearResult(rs)
dbDisconnect(con)
choices <- list("")
selectedIndex <- 1
if (length(dfData$NetworkName) > 0) {
for (i in 1:length(dfData$NetworkName)) {
choices <- c(choices, list(dfData$NetworkName))
}
}
choices
choices <- list("")
selectedIndex <- 1
if (length(dfData$NetworkName) > 0) {
for (i in 1:length(dfData$NetworkName)) {
choices <- c(choices, list(dfData$NetworkName[i]))
}
}
choices
selectedItem <- choices[selectedIndex]
return(
selectInput(
"mediaMovieNetwork",
"Network",
choices = choices,
selected = selectedItem
)
)
selectInput(
"mediaMovieNetwork",
"Network",
choices = choices,
selected = selectedItem
)
choices <- list("")
if (length(dfData$NetworkName) > 0) {
for (i in 1:length(dfData$NetworkName)) {
choices <- c(choices, list(dfData$NetworkName[i]))
}
}
selectInput(
"mediaMovieNetwork",
"Network",
choices = choices
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
is.Date("2021-02-05")
install.packages("lubridate")
as.Date("2021-02-06")
is.Date("2021-02-05")
library(lubridate)
is.Date("2021-02-05")
as.Date(as.Date("2021-02-05"))
is.Date(as.Date("2021-02-05"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
